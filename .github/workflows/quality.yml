name: 🔍 Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🏷️ 依赖检查
  dependency-check:
    name: 📦 Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Audit for vulnerabilities
        run: npm audit --audit-level=moderate

      - name: 📊 Check for outdated dependencies
        run: npm outdated || true

      - name: 🔍 Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # 📝 代码风格检查
  code-style:
    name: 🎨 Code Style
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 ESLint
        run: |
          npx eslint . --ext .ts,.tsx,.js,.jsx --format json > eslint-report.json || true
          npm run lint --if-present

      - name: 🎨 Prettier check
        run: |
          npx prettier --check . --format json > prettier-report.json || true
          npm run format:check --if-present

      - name: 📊 Upload style reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: style-reports
          path: |
            eslint-report.json
            prettier-report.json

  # 🏗️ TypeScript检查
  typescript-check:
    name: 🏗️ TypeScript
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type check
        run: |
          npm run type-check --if-present
          npx tsc --noEmit --project apps/web/tsconfig.json || true

      - name: 📊 Type coverage
        run: |
          npx type-coverage --strict --detail || true

  # 📊 代码复杂度分析
  complexity-analysis:
    name: 📊 Complexity Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 CodeClimate analysis
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: coverage/lcov.info:lcov

      - name: 🔍 SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # 📝 文档检查
  documentation-check:
    name: 📖 Documentation
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Check README exists
        run: |
          if [ ! -f README.md ]; then
            echo "❌ README.md is missing"
            exit 1
          fi

      - name: 🔍 Check for TODOs
        run: |
          echo "🔍 Searching for TODO comments..."
          grep -r "TODO\|FIXME\|HACK" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . || echo "✅ No TODOs found"

      - name: 📊 Documentation coverage
        run: |
          echo "📊 Analyzing documentation coverage..."
          # 这里可以添加文档覆盖率分析

  # 🚀 性能基准测试
  performance-benchmark:
    name: ⚡ Performance Benchmark
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: ⚡ Bundle size analysis
        run: |
          echo "📊 Analyzing bundle size..."
          du -sh apps/web/.next/ || true

      - name: 📊 Compare bundle sizes
        run: |
          echo "📊 Comparing with main branch..."
          # 这里可以添加bundle size比较逻辑

  # 🧹 代码清理检查
  cleanup-check:
    name: 🧹 Cleanup Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Check for unused files
        run: |
          echo "🔍 Checking for unused files..."
          find . -name "*.log" -o -name "*.tmp" -o -name "*.bak" | head -10 || echo "✅ No obvious unused files"

      - name: 🔍 Check for console.log statements
        run: |
          echo "🔍 Checking for console.log statements..."
          grep -r "console.log" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" apps/web/src/ | head -10 || echo "✅ No console.log found in source files"

  # 📊 质量报告
  quality-report:
    name: 📊 Quality Report
    runs-on: ubuntu-latest
    needs: [dependency-check, code-style, typescript-check]
    if: always()

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Generate quality report
        run: |
          echo "# 🔍 Code Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Quality Metrics" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependency Check**: ${{ needs.dependency-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Code Style**: ${{ needs.code-style.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **TypeScript**: ${{ needs.typescript-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📈 Recommendations" >> $GITHUB_STEP_SUMMARY
          echo "- Review any failed checks" >> $GITHUB_STEP_SUMMARY
          echo "- Update dependencies if needed" >> $GITHUB_STEP_SUMMARY
          echo "- Fix any TypeScript errors" >> $GITHUB_STEP_SUMMARY

      - name: 📧 Quality notification
        if: failure()
        run: |
          echo "❌ Quality checks failed. Please review the report."